name: 'bookstore'
services:
  catalog-service:
    image: azdanov/bookstore-catalog-service
    container_name: catalog-service
    profiles:
      - app
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_URL=jdbc:postgresql://catalog-db:5432/postgres
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
    ports:
      - "8081:8081"
    restart: unless-stopped
    depends_on:
      catalog-db:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 700m
  order-service:
    image: azdanov/bookstore-order-service
    container_name: order-service
    profiles:
      - app
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - ORDERS_CATALOG_SERVICE_URL=http://catalog-service:8081
      - DB_URL=jdbc:postgresql://orders-db:5432/postgres
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - RABBITMQ_HOST=bookstore-rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USERNAME=guest
      - RABBITMQ_PASSWORD=guest
    ports:
      - "8082:8082"
    restart: unless-stopped
    depends_on:
      orders-db:
        condition: service_healthy
      bookstore-rabbitmq:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 700m
  notification-service:
    image: azdanov/bookstore-notification-service
    container_name: notification-service
    profiles:
      - app
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_URL=jdbc:postgresql://notifications-db:5432/postgres
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - RABBITMQ_HOST=bookstore-rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USERNAME=guest
      - RABBITMQ_PASSWORD=guest
      - MAIL_HOST=mailpit
      - MAIL_PORT=1025
    ports:
      - "8083:8083"
    restart: unless-stopped
    depends_on:
      notifications-db:
        condition: service_healthy
      bookstore-rabbitmq:
        condition: service_healthy
      mailpit:
        condition: service_started
    deploy:
      resources:
        limits:
          memory: 700m
  catalog-db:
    image: postgres:16-alpine
    container_name: catalog-db
    profiles:
      - infra
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - "15432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 500m
  orders-db:
    image: postgres:16-alpine
    container_name: orders-db
    profiles:
      - infra
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - "25432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 500m
  bookstore-rabbitmq:
    image: rabbitmq:3.12.11-management
    container_name: bookstore-rabbitmq
    profiles:
      - infra
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 30s
      timeout: 30s
      retries: 10
    deploy:
      resources:
        limits:
          memory: 500m
  notifications-db:
    image: postgres:16-alpine
    container_name: notifications-db
    profiles:
      - infra
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - "35432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 500m
  mailpit:
    image: axllent/mailpit
    container_name: mailpit
    profiles:
      - infra
    ports:
      - 8025:8025
      - 1025:1025
