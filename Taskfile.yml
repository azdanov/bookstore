version: '3'

vars:
  GOOS: "{{default OS .GOOS}}"
  MVNW: '{{if eq .GOOS "windows"}}mvnw.cmd{{else}}./mvnw{{end}}'
  COMPOSE_FILE: "deployment/compose.yml"
  SLEEP_CMD: '{{if eq .GOOS "windows"}}timeout{{else}}sleep{{end}}'

tasks:
  default:
    cmds:
      - task: test

  test:
    deps: [format]
    cmds:
      - "{{.MVNW}} clean verify"

  format:
    cmds:
      - "{{.MVNW}} spotless:apply"

  build:
    cmds:
      - "{{.MVNW}} -pl catalog-service spring-boot:build-image -DskipTests"
      - "{{.MVNW}} -pl order-service spring-boot:build-image -DskipTests"
      - "{{.MVNW}} -pl notification-service spring-boot:build-image -DskipTests"
      - "{{.MVNW}} -pl api-gateway spring-boot:build-image -DskipTests"
      - "{{.MVNW}} -pl webapp spring-boot:build-image -DskipTests"

  start_infra:
    cmds:
      - "docker compose -f {{.COMPOSE_FILE}} --profile infra up -d"

  stop_infra:
    cmds:
      - "docker compose -f {{.COMPOSE_FILE}} --profile infra down -v"

  restart_infra:
    cmds:
      - task: stop_infra
      - task: sleep
      - task: start_infra

  start_monitoring:
    cmds:
      - "docker compose -f {{.COMPOSE_FILE}} --profile monitoring up -d"

  stop_monitoring:
    cmds:
      - "docker compose -f {{.COMPOSE_FILE}} --profile monitoring down -v"

  restart_monitoring:
    cmds:
      - task: stop_monitoring
      - task: sleep
      - task: start_monitoring

  start:
    deps: [build]
    cmds:
      - "docker compose -f {{.COMPOSE_FILE}} --profile app --profile infra --profile monitoring up -d"

  stop:
    cmds:
      - "docker compose -f {{.COMPOSE_FILE}} --profile app --profile infra --profile monitoring down -v"

  restart:
    cmds:
      - task: stop
      - task: sleep
      - task: start

  sleep:
    vars:
      DURATION: "{{default 5 .DURATION}}"
    cmds:
      - "{{.SLEEP_CMD}} {{.DURATION}}"
